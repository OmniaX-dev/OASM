.include_guard(__test_lib__oasm__)

//$.static_lib(test)
//-L option for lib include paths
//lib-test.oslib
// -sl test  -> will search for a file called libtest.oslib,
//				in current working dir or in any of the lib include paths
//				and will append the code to the end
//				It will also add the load code for the lib, inside the 
//				inside the load code of the script using the library
//
//				--make-static-lib, -SL option to compile as lib

//$.extern(sub-routine, test::__test_function, 0x007D)
//call,  Const_Const,  test::__test_function,  0

.data = reserve(__test_str_1, __test_str_2, __test_str_3)
.data = load_string(__test_str_1, "CIAO BELLA From Function-1!!")
.data = load_string(__test_str_2, "CIAO BELLA From Function-2 uuuhuuu!!")
.data = load_string(__test_str_3, "CIAO BELLA From Function-3 HEY!!")

:__test_function_1:
	cmd,	Const_Addr,		PrintStringToConsole,	__test_str_1
	cmd, Const_Const, PrintNewLineToConsole, 0
	cmd, Const_Const, PrintNewLineToConsole, 0
	ret,	Single_Const,	0

:__test_function_2:
	cmd,	Const_Addr,		PrintStringToConsole,	__test_str_2
	cmd, Const_Const, PrintNewLineToConsole, 0
	cmd,	Const_Addr,		PrintStringToConsole,	__test_str_2
	cmd, Const_Const, PrintNewLineToConsole, 0
	cmd, Const_Const, PrintNewLineToConsole, 0
	ret,	Single_Const,	0

:__test_function_3:
	cmd,	Const_Addr,		PrintStringToConsole,	__test_str_3
	cmd, Const_Const, PrintNewLineToConsole, 0
	cmd,	Const_Addr,		PrintStringToConsole,	__test_str_3
	cmd, Const_Const, PrintNewLineToConsole, 0
	cmd,	Const_Addr,		PrintStringToConsole,	__test_str_3
	cmd, Const_Const, PrintNewLineToConsole, 0
	cmd, Const_Const, PrintNewLineToConsole, 0
	ret,	Single_Const,	0
//End __test_function



.close_include_guard
