.include_guard(__use_lib__oasm__)

.command(request, ALL=1536)

.include [sys/system.oh]
.include [sys/timing.oh]
.include [gfx/base-video.oh]
.include [gfx/colors.oh]

.data = reserve(time1, time2, screenx, screeny, rndx, rndy, rndc)

:__main__:
	@SetFPS(30)
	@InitVideo(VIDEO_MODE_ASCII_GRID)
	@GetScreenSize(screenx, screeny)

	:loop:
		@CurrentTime(time1)
			#ClearScreen
			mem, Reg_Const, R30, 0
			mem, Reg_Addr, R31, screenx
			cmd, Const_Const, Random, rndx
			mem, Reg_Addr, R31, screeny
			cmd, Const_Const, Random, rndy
			mem, Reg_Const, R30, $.char('A')
			mem, Reg_Addr, R31, $.char('Z')
			cmd, Const_Const, Random, rndc
			@PlotChar(rndx, rndy, rndc, ::Yellow, ::Red)
			#Draw
		@CurrentTime(time2)
		no_op
		@WaitForFrame(time1, time2)
	jmp, Single_Const, JMP_UNCONDITIONAL, loop
ret, Single_Const, 0

.close_include_guard