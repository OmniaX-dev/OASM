str_cpy			---					---				addr/reg				addr/reg			---
add_str			AddrMode			---				addr/reg				addr/reg			---
				* set R31 to new str address
				* Flags
					-Add String pointer to String pointer
					-Add const_stream to String pointer


realloc			AddrMode			---				addr/reg				const/addr/reg		---
				* set R31 to new stream address


lda				---					---				addr					const_stream

offset,			AddrMode,			---,			const/addr/reg,			---					---



.data = array(__test_arr, 20)







.data = reserve(__om_temp_new_instance_addr)


//--------------------------------------------------------------------------------------------
.data = new(tStructTest, __test_instance)
//--------------------------------------------------------------------------------------------

		.data = reserve(__test_instance)
		call,			Const_Const,			__om_new_tStructTest__, 1,		Single_Ref, __test_instance

		

		:__test_instance_construct:
			mem,		Addr_Const,			__test_instance__var_1,			0
			mem,		Addr_Const,			__test_instance__var_2,			0
			lda_str,	"ciao ciccio"
			mem,		Addr_Reg,			__test_instance__var_3,			R31
			ret,		Single_Const,		0
		//End __test_instance_construct
//--------------------------------------------------------------------------------------------






.data = struct(tStructTest)
	var var_1;
	var var_2;
	var var_3;
	construct {
		@Load($var_1, 0)
		@Load($var_2, 0)
		@LoadString($var_3, "ciao ciccio")
	};
	function Count {
		cmd,		Const_Addr,			PrintIntToConsole,		$var_2
		ret,		Single_Const,		0
	};
.end_struct(tStructTest)


:__om_new_tStructTest__:
	pop.			Single_Reg,				R28				//this pointer
	alloc,			Single_Const,			***size_of_tStructTest***
	mem,			RegPtr_Reg,				R28,			R31
	ret,			Single_Const,			0
