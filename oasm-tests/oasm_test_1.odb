#version(0.2.2308)
.label fibonacci_series = 0x0007
.label for_loop = 0x0036
.label end_loop = 0x0065
.label sum_numbers = 0x0068
.label power_r = 0x0075
.label else = 0x00A1
.label __main__ = 0x00A4
.label __load_data__ = 0x00C7
.data max = 0x0000
.data _t1 = 0x0001
.data _t2 = 0x0002
.data next = 0x0003
.data i = 0x0004
.data fibo_text = 0x0005
.data pow_text = 0x0006
.source = { 
		0x0000:req,REQ_ALL,63
		0x0003:call,              Const_Const,                    __load_data__,             0x0000
		0x0007:pop,Single_Reg,R0
		0x000A:cmd,Const_Addr,PrintStringToConsole,fibo_text
		0x000E:cmd,Const_Const,PrintNewLineToConsole,0
		0x0012:cmd,Const_Const,PrintIntToConsole,0
		0x0016:cmd,Const_Const,PrintNewLineToConsole,0
		0x001A:cmd,Const_Const,PrintIntToConsole,1
		0x001E:cmd,Const_Const,PrintNewLineToConsole,0
		0x0022:cmd,Const_Const,PrintIntToConsole,2
		0x0026:cmd,Const_Const,PrintNewLineToConsole,0
		0x002A:mem,Addr_Const,i,3
		0x002E:mem,Addr_Const,_t1,1
		0x0032:mem,Addr_Const,_t2,2
		0x0036:cmp,Addr_Reg,i,R0
		0x003A:jmp,Single_Const,JMP_GREATER_OR_EQUALS,end_loop
		0x003E:inc,Single_Addr,i
		0x0041:mem,Addr_Addr,next,_t1
		0x0045:call,Const_Const,sum_numbers,2,Single_Addr,next,Single_Addr,_t2
		0x004D:mem,Addr_Reg,next,RV
		0x0051:mem,Addr_Addr,_t1,_t2
		0x0055:mem,Addr_Addr,_t2,next
		0x0059:cmd,Const_Addr,PrintIntToConsole,next
		0x005D:cmd,Const_Const,PrintNewLineToConsole,0
		0x0061:jmp,Single_Const,JMP_UNCONDITIONAL,for_loop
		0x0065:ret,Single_Const,0
		0x0068:pop,Single_Reg,R0
		0x006B:pop,Single_Reg,R1
		0x006E:add,Reg_Reg,R0,R1
		0x0072:ret,Single_Reg,R0
		0x0075:pop,Single_Reg,R0
		0x0078:pop,Single_Reg,R1
		0x007B:cmp,Reg_Const,R0,0
		0x007F:jmp,Single_Const,JMP_EQUALS,else
		0x0083:mem,Reg_Reg,R2,R0
		0x0087:dec,Single_Reg,R2
		0x008A:call,Const_Const,power_r,2,Single_Reg,R1,Single_Reg,R2
		0x0092:mem,Reg_Reg,R3,R1
		0x0096:mem,Reg_Reg,R4,RV
		0x009A:mul,Reg_Reg,R3,R4
		0x009E:ret,Single_Reg,R3
		0x00A1:ret,Single_Const,1
		0x00A4:call,Const_Const,fibonacci_series,1,Single_Const,5
		0x00AA:call,Const_Const,power_r,2,Single_Const,2,Single_Const,3
		0x00B2:cmd,Const_Addr,PrintStringToConsole,pow_text
		0x00B6:cmd,Const_Reg,PrintIntToConsole,RV
		0x00BA:cmd,Const_Const,PrintNewLineToConsole,0
		0x00BE:call,Const_Const,fibonacci_series,1,Single_Const,7
		0x00C4:ret,Single_Const,0xCACA
		0x00C7:reserve,Single_Reg,R30
		0x00CA:reserve,Single_Reg,R30
		0x00CD:reserve,Single_Reg,R30
		0x00D0:reserve,Single_Reg,R30
		0x00D3:reserve,Single_Reg,R30
		0x00D6:reserve,Single_Reg,R30
		0x00D9:reserve,Single_Reg,R30
		0x00DC:lda_str,"Fibonacci series:"
		0x00E6:mem,Addr_Reg,fibo_text,R31
		0x00EA:lda_str,"  -->POWER = "
		0x00F2:mem,Addr_Reg,pow_text,R31
		0x00F6:call,Const_Const,__main__,0x0000
		0x00FA:end,Single_Reg,RV
}