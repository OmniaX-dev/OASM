#version(0.2.2312)
.label fibonacci_series = 0x0007
.label for_loop = 0x0036
.label end_loop = 0x006D
.label sum_numbers = 0x0070
.label power_r = 0x007D
.label else = 0x00A9
.label __main__ = 0x00AC
.label __load_data__ = 0x00B5
.data max = 0x0000
.data _t1 = 0x0001
.data _t2 = 0x0002
.data next = 0x0003
.data i = 0x0004
.data fibo_text = 0x0005
.data pow_text = 0x0006
.source = { 
		0x0000:req,REQ_ALL,63
		0x0003:call,              Const_Const,                    __load_data__,             0x0000
		0x0007:pop,Single_Reg,R0
		0x000A:cmd,Const_Addr,PrintStringToConsole,fibo_text
		0x000E:cmd,Const_Const,PrintNewLineToConsole,0
		0x0012:cmd,Const_Const,PrintIntToConsole,0
		0x0016:cmd,Const_Const,PrintNewLineToConsole,0
		0x001A:cmd,Const_Const,PrintIntToConsole,1
		0x001E:cmd,Const_Const,PrintNewLineToConsole,0
		0x0022:cmd,Const_Const,PrintIntToConsole,2
		0x0026:cmd,Const_Const,PrintNewLineToConsole,0
		0x002A:mem,Addr_Const,i,3
		0x002E:mem,Addr_Const,_t1,1
		0x0032:mem,Addr_Const,_t2,2
		0x0036:mem,Reg_Const,R31,2
		0x003A:cmd,Const_Const,Sleep,500
		0x003E:cmp,Addr_Reg,i,R0
		0x0042:jmp,Single_Const,JMP_GREATER_OR_EQUALS,end_loop
		0x0046:inc,Single_Addr,i
		0x0049:mem,Addr_Addr,next,_t1
		0x004D:call,Const_Const,sum_numbers,2,Single_Addr,next,Single_Addr,_t2
		0x0055:mem,Addr_Reg,next,RV
		0x0059:mem,Addr_Addr,_t1,_t2
		0x005D:mem,Addr_Addr,_t2,next
		0x0061:cmd,Const_Addr,PrintIntToConsole,next
		0x0065:cmd,Const_Const,PrintNewLineToConsole,0
		0x0069:jmp,Single_Const,JMP_UNCONDITIONAL,for_loop
		0x006D:ret,Single_Const,0
		0x0070:pop,Single_Reg,R2
		0x0073:pop,Single_Reg,R3
		0x0076:add,Reg_Reg,R2,R3
		0x007A:ret,Single_Reg,R2
		0x007D:pop,Single_Reg,R0
		0x0080:pop,Single_Reg,R1
		0x0083:cmp,Reg_Const,R0,0
		0x0087:jmp,Single_Const,JMP_EQUALS,else
		0x008B:mem,Reg_Reg,R2,R0
		0x008F:dec,Single_Reg,R2
		0x0092:call,Const_Const,power_r,2,Single_Reg,R1,Single_Reg,R2
		0x009A:mem,Reg_Reg,R3,R1
		0x009E:mem,Reg_Reg,R4,RV
		0x00A2:mul,Reg_Reg,R3,R4
		0x00A6:ret,Single_Reg,R3
		0x00A9:ret,Single_Const,1
		0x00AC:call,Const_Const,fibonacci_series,1,Single_Const,20
		0x00B2:ret,Single_Const,0xCACA
		0x00B5:reserve,Single_Reg,R30
		0x00B8:reserve,Single_Reg,R30
		0x00BB:reserve,Single_Reg,R30
		0x00BE:reserve,Single_Reg,R30
		0x00C1:reserve,Single_Reg,R30
		0x00C4:reserve,Single_Reg,R30
		0x00C7:reserve,Single_Reg,R30
		0x00CA:lda_str,"Fibonacci series:"
		0x00D4:mem,Addr_Reg,fibo_text,R31
		0x00D8:lda_str,"  -->POWER = "
		0x00E0:mem,Addr_Reg,pow_text,R31
		0x00E4:call,Const_Const,__main__,0x0000
		0x00E8:end,Single_Reg,RV
}